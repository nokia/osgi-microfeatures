
play: @init.incl

hate.declare: test1 "DiameterLBTest-06.001 Server Overload - small send buffer"
hate.declare: test2 "DiameterLBTest-06.002 Server Overload - big send buffer"
hate.declare: test3 "DiameterLBTest-06.003 Server Overload - medium send buffer"
hate.declare: test4 "DiameterLBTest-06.004 Client Overload"

set: lowWM 100000
set: highWM 1000000
set: smallBuffer 100
set: mediumBuffer 550000
set: bigBuffer 2000000

hate.enter: test1
diameter.avp : TcpBuffer 5 123 /$smallBuffer
diameter.send-req: 123 110 diameter.avp.OriginHost diameter.avp.OriginRealm TcpBuffer
diameter.read-resp
diameter.check-resp-avp: 268 0 /2001

hate.enter: test2
diameter.avp : TcpBuffer 5 123 /$bigBuffer
diameter.send-req: 123 110 diameter.avp.OriginHost diameter.avp.OriginRealm TcpBuffer
diameter.read-resp
diameter.check-resp-avp: 268 0 /3004

hate.enter: test3
set: log 0
set: r2001 0
set: r3004 0
diameter.avp : TcpBuffer 5 123 /$mediumBuffer
for: iter 10000 >>
diameter.send-req: 123 110 diameter.avp.OriginHost diameter.avp.OriginRealm TcpBuffer >>
diameter.read-resp >>
compare: diameter.resp.result 2001 >>
#log: $(iter) NB of 2001 = $(r2001) / NB of 3004 = $(r3004) >>
if: add : r2001 1 >>
else: add : r3004 1

set: log 1
log: NB of 2001 = $(r2001) / NB of 3004 = $(r3004)
lower: r2001 6000
higher: r2001 4000

hate.enter: test4
set: log 0
diameter.avp : TcpBuffer 6 123 /$bigBuffer
for : iter 1000 >>
diameter.send-req: 123 110 diameter.avp.OriginHost diameter.avp.OriginRealm TcpBuffer >>
sleep-ms: 10

#we wait for a DWR
diameter.read-req
diameter.close
