#!groovy

pipeline {
  /*
   jenkins job used to deploy javadocs to artifactory.
  */

   agent {
     kubernetes {
       label 'build-rhel7-c-jdk8-mvn3-casr'
       inheritFrom 'k8s-build'
       containerTemplate {
         name 'java-c-mvn'
         image "csf-docker-delivered.${ARTIFACTORY_URL}/build_rhel7_c_jdk8_mvn3:1.0.0"
         alwaysPullImage true
         workingDir '/home/jenkins'
         ttyEnabled true
         command 'cat'
         args ''
       }
     }  
   }
   options { disableConcurrentBuilds() }

  parameters {
    choice(name: 'REPO',
	   choices: 'https://repo.lab.pl.alcatel-lucent.com/sandbox-mvn-candidates-local\nhttps://repo.lab.pl.alcatel-lucent.com/csf-mvn-candidates-local\nhttps://repo.lab.pl.alcatel-lucent.com/csf-mvn-delivered-local\n',
    	   description: 'Repository where the javadocs has to be deployed.')

    string(name: 'RELEASE',
           defaultValue: '1.0.0',
    	   description: 'Javadoc version.')
  }

  environment {
	GID = "com.nokia.casr"
	AID = "com.nokia.casr.javadoc"
	MVN = "/opt/apache-maven/bin/mvn"
	MOD1 = "core/com.alcatel.as.ioh core/com.alcatel.as.service.api core/com.alcatel.as.service.metering2 core/com.alcatel.as.utils/src/alcatel/tess/hometop/gateways/reactor"
	MOD2 = "core/com.alcatel_lucent.as.management.annotation core/com.alcatel_lucent.as.service.dns core/com.nextenso.proxylet.api"
	MOD3 = "http/com.nextenso.proxylet.http http/com.alcatel.as.http.ioh/src/com/alcatel/as/http2/client/api"
	MODULES = "${MOD1} ${MOD2} ${MOD3}"
  }

  stages {

    stage('Javadoc') {
      when {
        expression { env.GERRIT_EVENT_TYPE != 'patchset-created' && env.GERRIT_EVENT_TYPE != 'change-merged' }
      }
      steps {
          withCredentials([usernamePassword(credentialsId: 'csf-jenkins-for-artifactory',
                          usernameVariable: 'USER', passwordVariable: 'PASSWORD')]) {
                          
          	script {
          	    container('java-c-mvn') {          	
	      		sh """
			javadoc -Xdoclint:none -d ${AID} `find ${MODULES} -name *.java` || echo 'some javadoc errors occured (ignoring)'
			jar cf ${AID}.jar ${AID}
	      		"""
			
	      		if (params["REPO"] == "https://repo.lab.pl.alcatel-lucent.com/sandbox-mvn-candidates-local") {
		  		sh """
				${MVN} deploy:deploy-file -Durl=${params.REPO} -Dfile=${AID}.jar -Dpackaging=jar -DgeneratePom=true -DgroupId=${GID} -DartifactId=${AID} -Dversion=${params.RELEASE}
		  		"""
          		} else {
		  		sh """
		  		echo '<settings><servers><server><id>candidate</id><username>${user}</username><password>${password}</password></server></servers></settings>' > settings.xml
				${MVN} deploy:deploy-file -s settings.xml -Duser=${USER} -Dpassword=${PASSWORD} -DrepositoryId=candidate -Durl=${params.REPO} -Dfile=${AID}.jar -Dpackaging=jar -DgeneratePom=true -DgroupId=${GID} -DartifactId=${AID} -Dversion=${params.RELEASE}
		  		"""
          		}
		    }
	    	}
          }
      }
    }

  }

  post {
    always {
      deleteDir()
    }
  }
}

