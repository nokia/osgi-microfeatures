#!groovy

pipeline {
/*
   Jenkins job used to copy bndtools sample workspace to artifactory candidate repo.
*/

   agent {
     kubernetes {
       label 'build-rhel7-c-jdk8-mvn3-casr'
       inheritFrom 'k8s-build'
       containerTemplate {
         name 'java-c-mvn'
         image "csf-docker-delivered.${ARTIFACTORY_URL}/build_rhel7_c_jdk8_mvn3:1.0.0"
         alwaysPullImage true
         workingDir '/home/jenkins'
         ttyEnabled true
         command 'cat'
         args ''
       }
     }  
   }
   options { disableConcurrentBuilds() }

  parameters {
    choice(name: 'REPO',
           choices: 'Snapshot\nCandidate\n',
    	   description: 'Configures the OBR artifactory repository where the bndtools workspace tar.gz has to be deployed.')

    string(name: 'RELEASE',
           defaultValue: '1.0.0-SNAPSHOT',
    	   description: 'Configures the workspace tar.gz release number. Remove the -SNAPSHOT in case you deploy to either a Candidate repository.')
  }

  environment {
        CSF_REPO = "https://repo.lab.pl.alcatel-lucent.com"
        CSF_REPO_CANDIDATES = "https://repo.lab.pl.alcatel-lucent.com/csf-mvn-candidates"
        CSF_REPO_SNAPSHOTS = "https://repo.lab.pl.alcatel-lucent.com/csf-mvn-snapshots"
	GROUP_ID = "com.nokia.casr.workspace"
	ARTIFACT_ID = "com.nokia.casr.workspace.template"
	WORKSPACE_TGZ = "com.nokia.casr.workspace.template.tgz"
  }

  stages {
    stage('Deploy Workspace Template') {
      when {
        expression { env.GERRIT_EVENT_TYPE != 'patchset-created' && env.GERRIT_EVENT_TYPE != 'change-merged' }
      }
      steps {
          withCredentials([usernamePassword(credentialsId: 'csf-jenkins-for-artifactory',
                          usernameVariable: 'USER', passwordVariable: 'PASSWORD')]) {
	    script {
	      sh """
	      cd samples
	      tar zcvf ${WORKSPACE_TGZ} com.nokia.casr.workspace.template 
	      cd ..
	      """

	      if (params["REPO"] == "Candidate") {
		  sh """
		  cd runtime
		  ./artifactory-upload.sh ../samples/${WORKSPACE_TGZ} ${CSF_REPO_CANDIDATES}-local ${USER} ${PASSWORD} ${GROUP_ID} ${ARTIFACT_ID} ${params.RELEASE}
		  """
              } else if (params["REPO"] == "Snapshot") {
		  sh """
		  cd runtime
		  ./artifactory-upload.sh ../samples/${WORKSPACE_TGZ} ${CSF_REPO_SNAPSHOTS}-local ${USER} ${PASSWORD} ${GROUP_ID} ${ARTIFACT_ID} ${params.RELEASE}
		  """
              }
	    }
          }
      }
    }

  }

  post {
    always {
      deleteDir()
    }
  }
}

