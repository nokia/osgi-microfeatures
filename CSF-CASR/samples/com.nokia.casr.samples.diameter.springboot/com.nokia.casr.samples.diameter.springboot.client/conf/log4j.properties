###############################################################################
# Log4j Root Logger.
###############################################################################

##
# The root logger level, and corresponding appenders.
# Syntax: rootLogger=<level>,<appender1>,<appender2>, ...
# The <level> must have either one of these values:
#	OFF	(turn off logging)
#	FATAL	(designates very severe, non recoverable error events)
#	ERROR	(designates recoverable error events)
#	WARN	(designates harmful events)
#	INFO	(designates informational events)
#	DEBUG	(designates debug events)
#	ALL	(designates fine-grained debug events and activate all logging)
#
#	the DECO appender is a decorator appended used to provide the group/instance name in
#	all logs.
#
#log4j.rootLogger=WARN,DECO,FILE
log4j.rootLogger=WARN,FILE
log4j.logger.as.service.fc=WARN
log4j.logger.as.service.mux=WARN
log4j.logger.as.stat=WARN
log4j.logger.as.service.metering=WARN

##
# This property enables you to globally limit the log level whatever the logger
# configuration. It is useful when there are a lot of active loggers, and you want to
# active a level for all loggers in one shot.
# Leaving this property to OFF turn off all logging !
##
#log4j.threshold=OFF

###############################################################################
# Common Platform Services loggers
###############################################################################

## Configuration service logging
#log4j.logger.as.service.configuration=DEBUG

## OSGi logging
#log4j.logger.osgi=DEBUG
#log4j.logger.osgi.event.bundle=DEBUG
#log4j.logger.osgi.event.fwk=DEBUG
#log4j.logger.osgi.event.service=DEBUG

## Redirect all System.out messages to this logger
log4j.stdout=DEBUG

## Redirect all System.err messages to this logger
log4j.stderr=DEBUG

###############################################################################
# DECORATION Appender used to display group/instance name for each logs
###############################################################################

log4j.appender.DECO=com.alcatel.as.service.log4j.impl.Decorator

###############################################################################
# Platform File Appender
###############################################################################

##
# The FILE appender do the following:
#	- It sync logs with level ERR/WARN,
#	- It captures stdout/stderr messages and uncaught/unlogged exceptions
#	  and displays them to log4j.
#	- It calls LogManager.shutdown when jvm exits.
#	- It halts the jvm if an Out Of Memory exception is logged.
#	- It zip files if max file size is exceeded.
#	- if bufferSize is 0, all logs are autoflushed. Else we use the specified buffer size,
#	  and we'll flush the buffered output stream each 5 seconds.
##
log4j.appender.FILE=alcatel.tess.hometop.gateways.utils.Log4jAppender
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
# Displays the file name + line number of the logging thread (VERY time consuming)
#log4j.appender.FILE.layout.ConversionPattern=%d{ISO8601} %t %-5p %c %x %F:%L - %m%n
log4j.appender.FILE.layout.ConversionPattern=%d{ISO8601} %t %-5p %c %x - %m%n
log4j.appender.FILE.file=msg.log
log4j.appender.FILE.maxFileSize=50240000
log4j.appender.FILE.maxZipFiles=10
log4j.appender.FILE.checkOutOfMemory=true
log4j.appender.FILE.bufferSize=0
# Turn on these properties for daily log rotation
#log4j.appender.FILE.rotationTime=23:00
#log4j.appender.FILE.maxStorageDays=10

###############################################################################
# SOCKET appender used to send logs to Chainsaw
###############################################################################

log4j.appender.SOCKET=org.apache.log4j.net.SocketAppender
log4j.appender.SOCKET.RemoteHost=localhost
log4j.appender.SOCKET.port=4445


###############################################################################
# IOHandler Loggers
###############################################################################

##
# logger used by all servers
#log4j.logger.as.ioh.server=DEBUG

##
# logger used by tcp client
#log4j.logger.as.ioh.client.tcp=DEBUG

##########################
# License Manager logs
##########################
#log4j.logger.as.service.licensemgr=DEBUG

################################
# Proxylets deployer loggers
################################

#log4j.logger.as.service.pxletdeployer=DEBUG
#log4j.logger.as.service.pxletdeployer.<protocol>=DEBUG
#######################################
# Diameter Agent Loggers
#######################################

#log4j.logger.agent.diameter=DEBUG
#log4j.logger.agent.diameter.properties=DEBUG
#log4j.logger.agent.diameter.activator=DEBUG
#log4j.logger.agent.diameter.sessionManager=DEBUG
#log4j.logger.agent.diameter.requestmanager=DEBUG
#log4j.logger.agent.diameter.ha.set=DEBUG
#log4j.logger.agent.diameter.ha.get=DEBUG
#log4j.logger.agent.diameter.ha.manager=DEBUG
#log4j.logger.agent.diameter.utils=DEBUG
#log4j.logger.agent.diameter.message=DEBUG
#log4j.logger.agent.diameter.session=DEBUG
#log4j.logger.agent.diameter.response=DEBUG
#log4j.logger.agent.diameter.request=DEBUG
#log4j.logger.agent.diameter.client=DEBUG
#log4j.logger.agent.diameter.peertable=DEBUG
#log4j.logger.agent.diameter.rfc3539.state.suspect=DEBUG
#log4j.logger.agent.diameter.rfc3539.state.initial=DEBUG
#log4j.logger.agent.diameter.rfc3539.state.down=DEBUG
#log4j.logger.agent.diameter.rfc3539.state.machine=DEBUG
#log4j.logger.agent.diameter.rfc3539.state.reopen=DEBUG
#log4j.logger.agent.diameter.rfc3539.state.okay=DEBUG
#log4j.logger.agent.diameter.dwListener=DEBUG
#log4j.logger.agent.diameter.state.machine=DEBUG
#log4j.logger.agent.diameter.rfc3588.state.machine=DEBUG
#log4j.logger.agent.diameter.rfc3588.state.ropen=DEBUG
#log4j.logger.agent.diameter.rfc3588.state.iopen=DEBUG
#log4j.logger.agent.diameter.capabilities=DEBUG
#log4j.logger.agent.diameter.localpeer=DEBUG
#log4j.logger.agent.diameter.listenerWithExecutor=DEBUG
#log4j.logger.agent.diameter.routetablemanager=DEBUG
#log4j.logger.agent.diameter.peer.static=DEBUG
#log4j.logger.agent.diameter.peer.parser=DEBUG
#log4j.logger.agent.diameter.peerparser=DEBUG
#log4j.logger.agent.diameter.parser.route=DEBUG
#log4j.logger.agent.diameter.capabilities.parser=DEBUG
#log4j.logger.agent.diameter.RSocket=DEBUG
#log4j.logger.agent.diameter.peersocket=DEBUG
#log4j.logger.agent.diameter.ISocket=DEBUG
#log4j.logger.agent.diameter.peer.remote=DEBUG
#log4j.logger.agent.diameter.peertablemanager=DEBUG
#log4j.logger.agent.diameter.routetable=DEBUG
#log4j.logger.agent.diameter.pxlet=DEBUG
#log4j.logger.agent.diameter.pxlet.context=DEBUG
#log4j.logger.agent.diameter.engine=DEBUG
#log4j.logger.agent.diameter.launcher=DEBUG
###############################################################################
# DiameterIOH Loggers
###############################################################################

# the DiameterIOH engine logger
#log4j.logger.as.ioh.engine.diameter=DEBUG
#log4j.logger.as.ioh.engine.diameter.traffic=DEBUG

# optionally below to focus on an agent instance
#log4j.logger.as.ioh.engine.diameter.agent.<intanceName>.<containerId>=DEBUG


#log4j.logger.as.ioh.diameter.router=DEBUG
#log4j.logger.as.ioh.diameter.proc=DEBUG

