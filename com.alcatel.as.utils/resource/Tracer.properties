##
# Default nx Tracer properties which will log to stdout.
#

#------------------------------------------------------------
# General tracer parameters
#------------------------------------------------------------

##
# Enter here the default tracer to use. This tracer will be returned by
# the methode "TracerManager.getTracer()".
#
tracer.defaultTracer = msg

##
# Turn on/off auto flushing
#
tracer.autoFlush = true

#------------------------------------------------------------
# Tracer "msg"
#
# A tracer section have the following structure:
#
# tracer.TRACER_NAME.level
# tracer.TRACER_NAME.handlers
# tracer.TRACER_NAME.applyAllHandlers
# tracer.TRACER_NAME.stackTrace
#------------------------------------------------------------

##
# Select the max log level that will be logged by this tracer. 
# Selecting DEBUG means that you will see all log messages, 
# including WARN level up to DEBUG level.
# available choices are "ERR WARN NOTICE INFO DEBUG".
#
tracer.msg.level = WARN

##
# Choose the handlers that must be activated by log messages:
# "foo" handler will redirect log to a file named "foo.log"
# syslog handler will redirect log to the syslog server
#
tracer.msg.handlers = stdout_handler

##
# When a log is generated, then each handler is activated in
# the order it has been found from the properrty "tracer.xxx.handlers"
# (see above: tracer.msg.handlers).
# If you set this parameter to false, then only the first handler will be activated,
#  unless this first handlers fails to log. 
# If the first handler gets an io exception, then the next handler found is
# activated, and so on. 
# But if you select true, then all handlers will be activated.
#
tracer.msg.applyAllHandlers = true

##
# Enter true if you need to dump a stack trace in all logs written with
# the "msg" tracer.
#
tracer.msg.stackTrace = false

#------------------------------------------------------------
# FileHandler which name is "stdout_handler"
#
# file handler parameters have the following structure:
#
# tracer.handler.HANDLE_NAME.class = alcatel.tess.hometop.gateways.tracer.StandardHandler
# tracer.handler.HANDLE_NAME.logFile = <your logfile (with enventual subdirs).
#------------------------------------------------------------

##
# This parameter defines file handler called "msg" and will
# redirect logs in /tmp/log/<instance-name>/msg.log
#
tracer.handler.stdout_handler.class = alcatel.tess.hometop.gateways.tracer.StandardHandler



