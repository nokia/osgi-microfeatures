# p>Name of the session header (significant if policy=header)</p>
httpagent.session.header.name=X-Nx-Clid

# HTTP2 Client Ciphers (Direct Mode)
httpagent.h2client.tcp.secure.cipher=

# HTTP2 Idle Timeout (Proxy Mode)
httpagent.h2client.proxy.http2.connection.idle.timeout=-1

# HTTP2 Client Keystore Password (Proxy Mode)
httpagent.h2client.proxy.tcp.secure.keystore.pwd=

# HTTP2 Idle Timeout (Direct Mode)
httpagent.h2client.http2.connection.idle.timeout=60000

# Specifies if the httpStack should send the requests to the httpAgent. The 
# special value <b>Auto</b> means that the httpAgent will choose by looking at 
# the deployed proxylets.
httpagent.req.filtering=Auto

# p>Pseudonym inserted into the Via header instead of the real host</p>
httpagent.via.pseudonym=

# HTTP2 Client Ciphers (Proxy Mode)
httpagent.h2client.proxy.tcp.secure.cipher=

# HTTP2 Client Keystore Algorithm (Direct Mode)
httpagent.h2client.tcp.secure.keystore.algo=

# HTTP2 Ping Delay (Proxy Mode)
httpagent.h2client.proxy.http2.connection.ping.delay=

# HTTP2 Client Keystore Path (Direct Mode)
httpagent.h2client.tcp.secure.keystore.file=

# HTTP2 Client Endpoint Identification Algorithm (Direct Mode)
httpagent.h2client.tcp.secure.endpoint.identity.algo=

# Specifies the expected number of simultaneous clients. It is used by the 
# httpAgent to size internal pools and does not have to be accurate.
httpagent.client.sizing=100

# p>Change how the HTTP2 traffic will be handled by the HTTP2 Client</p><ul><li><
# b>true :</b> traffic will go throught the IOH </li><li><b>false :</b> HTTP2 
# Client will open sockets directly from the agent,</li></ul>
httpagent.h2.traffic.mux=false

# Specifies if the httpStack should send the responses to the httpAgent. The 
# special value <b>Auto</b> means that the httpAgent will choose by looking at 
# the deployed proxylets.
httpagent.resp.filtering=Auto

# p>Rules to select the next proxy, for requests received on the proxy ports</p>
file-httpagent.next.proxy=next-proxy.txt

# Specified the timeout in milliseconds to use for HTTP2 requests.
httpagent.h2client.req.timeout=10000

# The session timeout value in seconds.
httpagent.session.tmout=1200

# Socket demux timeout in seconds.
httpagent.socket.timeout=0

# p>Rules to select the next server, for requests received on the reverse proxy 
# ports</p>
file-httpagent.next.server=next-server.txt

# p> The name of the Http Stack instances that the Http Agent will connect to. 
# The special value <b>*</b> means that the Http Agent will connect to all the 
# Http Stacks no matter the instance.</p>
httpagent.stack=*

# p>The session policy used when the agent is connected to HttpIOH:</p><ul><li><b>
# none:</b> There is no way the session can be determined,</li><li><b>client-ip:
# b> All the traffic coming from the same host belongs to the same session,</li><
# li><b>cookie:</b> The session is identified with a cookie,</li><li><b>header:</
# b> The session is identified thanks to a HTTP header.</li></ul>
httpagent.session.policy=none

# Activates the High Availability mode. This mode may require a registry to be 
# started at the level group.
httpagent.ha=false

# Activate sip/http convergence mode.
httpagent.sip.convergence=false

# HTTP2 Client Keystore Type (Direct Mode)
httpagent.h2client.tcp.secure.keystore.type=

# HTTP2 Client Keystore Password (Direct mode)
httpagent.h2client.tcp.secure.keystore.pwd=

# HTTP2 Ping Delay (Direct Mode)
httpagent.h2client.http2.connection.ping.delay=

# Description of the property httpagent.client.filtering
httpagent.client.filtering=No

# HTTP2 Client Keystore Path (Proxy Mode)
httpagent.h2client.proxy.tcp.secure.keystore.file=

# p>Rules to allow tunneling when using HTTP CONNECT method</p>
file-httpagent.connect.tunneling=connect-tunneling.txt

# HTTP2 Client Endpoint Identification Algorithm (Proxy Mode)
httpagent.h2client.proxy.tcp.secure.endpoint.identity.algo=

# Specifies if the httpAgent should always buffer incoming responses. This value 
# should be set to <b>false</b> by default.
httpagent.resp.buffering=false

# Enable tunneling when proxying in HTTP2 Client
httpagent.h2client.proxy.tunneling=false

# HTTP2 Client Keystore type (Proxy Mode)
httpagent.h2client.proxy.tcp.secure.keystore.type=

# Specifies if any HttpURLConnection must be wrapped over any available http IOH 
# mux connections. By default the property is set to true, meaning all 
# HttpURLConnection http requests will be forwarded to any http IOH mux 
# connection. In this case, the request will be sent out of the http IOH, not 
# from the agent jvm. Setting this property to false means the http request will 
# be sent out of the agent jvm directly, without using the http IOH.
httpagent.wrap.httpurlconnection=true

# Specifies if the httpAgent should always buffer incoming requests.
httpagent.req.buffering=true

# p>Proxylet XML Configuration. This configuration allows to bypass what is 
# configuring from the Proxy Application Deployment GUI, and specify the exact 
# list of proxylets in XML. <p> If this configuration is left empty, then the 
# Proxy Application Deployment GUI is used for configuring the list of all active 
# proxylets.
file-httpagent.proxylets=httpagent.proxylets.xml

# p>Name of the session cookie (significant if policy=cookie)</p>
httpagent.session.cookie.name=JSESSIONID

# p>If true, the IOH can connect to itself</p>
httpagent.self.connection=false

# HTTP2 Client Keystore Algorithm (Proxy Mode)
httpagent.h2client.proxy.tcp.secure.keystore.algo=

